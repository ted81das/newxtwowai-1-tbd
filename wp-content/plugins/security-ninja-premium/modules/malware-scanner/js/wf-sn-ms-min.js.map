{"version":3,"names":["pad","val","valString","length","msminutesLabel","document","getElementById","mssecondsLabel","totalSeconds","updateTimeCounter","innerHTML","parseInt","actions","msg1","msg2","action","jQuery","ready","$","on","e","preventDefault","html","setInterval","startingpoint","Deferred","resolve","hide","each","i","append","sn_block_ui","pipe","removeClass","addClass","params","ajax","type","url","ajaxurl","data","what","_ajax_nonce","wf_sn_ms","nonce","dataType","success","response","alert","replace","cnt","sn_unblock_ui","show","window","location","reload","error","content","this","parents","find","toggleClass","slideToggle","confirm","post","slideUp","hash","filename","message","fail","jqXHR","textStatus","errorThrown","button","href","URL","open","console"],"sources":["wf-sn-ms.js"],"sourcesContent":["/* globals jQuery:true, ajaxurl:true, sn_block_ui:true, sn_unblock_ui:true, wf_sn_ms:true */\r\n/*\r\n * Security Ninja - Malware Scanner add-on\r\n * (c) 2015. Web factory Ltd\r\n */\r\n\r\n\r\nfunction pad(val) {\r\n  var valString = val + \"\";\r\n  if (valString.length < 2) {\r\n    return \"0\" + valString;\r\n  } else {\r\n    return valString;\r\n  }\r\n}\r\n\r\nvar msminutesLabel = document.getElementById(\"mscounterminutes\");\r\nvar mssecondsLabel = document.getElementById(\"mscounterseconds\");\r\nvar totalSeconds = 0;\r\n// FOR THE SECOND COUNTER ON THE OVERLAY\r\nfunction updateTimeCounter() {\r\n  ++totalSeconds;\r\n  mssecondsLabel.innerHTML = pad(totalSeconds % 60);\r\n  msminutesLabel.innerHTML = pad(parseInt(totalSeconds / 60));\r\n}\r\n\r\n\r\nvar actions = [\r\n{msg1: 'Cleaning cache ... ', msg2: ' DONE!', action: 'clean_cache'},\r\n{msg1: 'Checking malware definitions', msg2: 'DONE!', action: 'update_samples'},\r\n\r\n{msg1: 'Checking plugins for modifications', msg2: 'DONE!', action: 'do_integrity_scan'},\r\n\r\n  //{msg1: 'Generating list of wp_options table rows ... ', msg2: 'DONE! Found %d rows.', action: 'get_db_rows'},\r\n  //{msg1: 'Scanning wp_options table ... ', msg2: 'DONE! Found %d suspicious rows.', action: 'scan_db'},\r\n  {msg1: 'Scanning website for malicious code', msg2: 'DONE!', action: 'do_mal_scan'},\r\n  {msg1: 'Generating results ... ', msg2: 'DONE!', action: 'get_results'}\r\n  ];\r\n\r\n\r\n\r\n\r\n\r\n\r\n  jQuery(document).ready(function($) {\r\n\r\n  // handle each individual ajax call\r\n  function do_sn_ms_request(params) {\r\n\r\n    return jQuery.ajax({ type: 'POST',\r\n      url: ajaxurl,\r\n      data: {\r\n        action: 'sn_ms_run_scan',\r\n        what: params.action,\r\n        _ajax_nonce: wf_sn_ms.nonce\r\n      },\r\n      dataType: 'json',\r\n      success: function(response) {\r\n\r\n\r\n  if ( response !== null ) {\r\n\r\n        if ( response.success !== null ) {\r\n          // no response\r\n        }\r\n        else {\r\n          alert('Invalid option. Please reload');\r\n          return;\r\n\r\n        }\r\n\r\n\r\n        jQuery('#msg_' + params.action).removeClass('pending').removeClass('current').addClass('passed');\r\n\r\n        jQuery('.badge', '#msg_' + params.action).html(params.msg2.replace('%d', parseInt(response.data.cnt, 10)));\r\n\r\n        if (params.action === 'scan_db') {\r\n          // scan_db IS BEFORE do_mal_scan\r\n          // LARS - using timer instead of updates from database\r\n          //update_scan_status(); // start the update\r\n        }\r\n\r\n        if (params.action === 'get_results') {\r\n            // stops the update timer\r\n          //  clearTimeout(regularupdate);\r\n          jQuery('#sn_ms_results').append(response.data);\r\n          sn_unblock_ui('#sn-malware-scanner');\r\n          jQuery('.loader').show();\r\n          window.location.reload();\r\n        }\r\n      }\r\n      }, // success\r\n      error: function(){\r\n        // clearTimeout(regularupdate);\r\n        alert('An undocumented error has occured. Please reload the page and try again.');\r\n\r\n      } // error\r\n    });\r\n  }\r\n\r\n\r\n\r\n  // run test\r\n  jQuery('#sn_ms_run_scan').on('click', function(e) {\r\n    e.preventDefault();\r\n\r\n    jQuery('#scanstatus').html();\r\n\r\n    setInterval(updateTimeCounter, 1000);\r\n\r\n   //  var running_scan = true;\r\n\r\n   let startingpoint = jQuery.Deferred();\r\n   startingpoint.resolve();\r\n\r\n   jQuery('#sn_ms_results').html('');\r\n   jQuery('ul.malware-scan-list').html('');\r\n   jQuery('.wrap .error').hide();\r\n\r\n   jQuery.each(actions, function(i, action) {\r\n\r\n    jQuery('ul.malware-scan-list').append('<li id=\"msg_' + action.action +'\" class=\"pending\">' + action.msg1 + ' <span class=\"badge\">Waiting ...</span></li>');\r\n\r\n      if (action.action=='do_mal_scan') {\r\n        // Appends more text to the popup when scanning - not currently working\r\n        // jQuery('#msg_do_mal_scan').append('<div id=\"scanstatus\"><ul><li>Files scanned <span id=\"files_scanned\"></span></li><li>Directories scanned <span id=\"directories\"></span></li><li>Last directory <span id=\"last_processed_dir\"></span></li></ul></div>');\r\n      }\r\n      \r\n    });\r\n   jQuery('.loader').hide();\r\n\r\n   sn_block_ui('#sn-malware-scanner');\r\n\r\n   jQuery.each(actions, function(i, action) {\r\n\r\n    startingpoint = startingpoint.pipe( function() {\r\n      jQuery('#msg_' + action.action).removeClass('pending').addClass('current');\r\n      jQuery('.badge', '#msg_' + action.action).html('Working ...');\r\n      return do_sn_ms_request(action);\r\n    });\r\n      }); // each action\r\n\r\n   jQuery('.wf-sn-ms-not-run').hide();\r\n    //  running_scan = false;\r\n\r\n});\r\n\r\n//.sn-malware-title\r\n  $('.secnin_content_wrapper').on('click', '.toggle-slide', function(e){\r\n    e.preventDefault();\r\n\r\n    let content = $(this).parents('.sn-malware-filebox').find('.sn-malware-file-code');\r\n    $(this).toggleClass('opened');\r\n    $(content).slideToggle(500);\r\n  });\r\n\r\n\r\n  // reset files whitelist\r\n  $('#sn-ms-reset-whitelist').on('click', function(e){\r\n    e.preventDefault();\r\n\r\n    if (!confirm('Are you sure you want to reset the whitelisted files list?\\nPlease rescan files after cleaning the whitelist.')) {\r\n      return;\r\n    }\r\n    $.post(ajaxurl, {\r\n      _ajax_nonce: wf_sn_ms.nonce,\r\n      action: 'sn_ms_reset_whitelist'\r\n    },\r\n    function() {\r\n      window.location.reload();\r\n    });\r\n  }); // reset files whitelist\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // whitelist file\r\n  $('#sn_malware').on('click', 'button.sn_ms_whitelist', function(e){\r\n    e.preventDefault();\r\n\r\n    let tmp = confirm('Are you sure you want to whitelist this file?\\n\\nPlease reload page to see all changes.');\r\n    if (!tmp) {\r\n      return;\r\n    }\r\n\r\n    $(this).parents('.sn-malware-filebox').slideUp(500);\r\n\r\n    $.post(ajaxurl,{\r\n      action: 'sn_ms_whitelist_file',\r\n      hash: $(this).data('hash'),\r\n      filename: $(this).data('filename'),\r\n      _ajax_nonce: wf_sn_ms.nonce\r\n    },\r\n    function(response){\r\n      if(response.success) {\r\n        // If the server responded with success, inform the user.\r\n        alert('The file has been successfully added to the whitelist. Please reload the page to see all changes.');\r\n      } else {\r\n        // If the server responded with an error, display the error message.\r\n        alert('Error: ' + (response.data && response.data.message ? response.data.message : 'Could not add the file to the whitelist.'));\r\n      }\r\n    },\r\n    'json'\r\n    );\r\n  }); \r\n\r\n\r\n\r\n// Revert whitelisting a file\r\n$('#sn_malware').on('click', 'button.sn_ms_revert_whitelist', function(e){\r\n  e.preventDefault();\r\n\r\n  let tmp = confirm('Are you sure you want to no longer whitelist this file?\\n\\nPlease reload page to see all changes.'); // i8n\r\n  if (!tmp) {\r\n    return;\r\n  }\r\n\r\n  $(this).parents('.sn-malware-filebox').slideUp(500);\r\n\r\n  $.post(ajaxurl,{\r\n    action: 'revert_whitelist_btn',\r\n    hash: $(this).data('hash'),\r\n    filename: $(this).data('filename'),\r\n    _ajax_nonce: wf_sn_ms.nonce\r\n  },\r\n  function(response){\r\n    if(response.success) {\r\n      // If the server responded with success, inform the user.\r\n      alert('The file has been successfully removed from the whitelist. Please reload the page to see all changes.');\r\n    } else {\r\n      // If the server responded with an error, display the error message.\r\n      alert('Error: ' + (response.data && response.data.message ? response.data.message : 'Could not remove the file from the whitelist.'));\r\n    }\r\n  },\r\n  'json'\r\n  ).fail(function(jqXHR, textStatus, errorThrown) {\r\n    // Handle AJAX request failure\r\n    alert('Request failed: ' + textStatus + '. ' + errorThrown);\r\n  });\r\n});\r\n\r\n\r\n\r\n  // delete file\r\n  $('#sn_ms_results').on('click', 'button.sn_ms_delete', function(e){\r\n    e.preventDefault();\r\n\r\n    let tmp = confirm('Are you sure you want to delete this file?\\n\\n There is NO undo!\\n\\nThis can break functionality or your site from functioning. Use only if you know what you are doing :-)' + $(this).data('filename'));\r\n    if ( !tmp ) {\r\n      return;\r\n    }\r\n\r\n    let button = this;\r\n\r\n    $.post(ajaxurl,{\r\n      action: 'sn_ms_delete_file', \r\n      filename: $(this).data('filename'), \r\n      hash: $(this).data('hash'), \r\n      _ajax_nonce: wf_sn_ms.nonce\r\n    },\r\n     function(response){\r\n       if (typeof response.success == 'undefined') {\r\n         alert('Undocumented error. File was not deleted. Please reload the page.');\r\n       } else if (response.success == true) {\r\n         alert('File deleted!');\r\n         $(button).parents('.sn-malware-filebox').slideUp(500);\r\n       } else {\r\n         alert('Your file access properties do not allow us to delete the file (this is not a bad thing). Please delete it manually, via FTP.');\r\n       }\r\n     },\r\n     'json'\r\n     );\r\n  }); // Delete a file\r\n\r\n\r\n\r\n\r\n  \r\n  // view file\r\n  $('#sn_ms_results').on('click', '.sn_ms_view_file', function(e){\r\n    e.preventDefault();\r\n    if (typeof $(this).data('href') !== 'undefined') {\r\n      const href = $(this).data('href');\r\n      try {\r\n          new URL(href); // This will throw an error if the URL is invalid\r\n          window.open(href);\r\n      } catch (e) {\r\n          console.error('Invalid URL:', href);\r\n      }\r\n      return;\r\n  }\r\n  });\r\n\r\n\r\n\r\n});"],"mappings":"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","ignoreList":[]}